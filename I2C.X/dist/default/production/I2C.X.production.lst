

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 24 22:25:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F23K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  001AD6                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _Dio_configutation_D
    71  001AD6  03                 	db	3
    72  001AD7  FF                 	db	255
    73  001AD8  FF                 	db	255
    74  001AD9  00                 	db	0
    75                           
    76                           ;initializer for _Dio_configutation_B
    77  001ADA  01                 	db	1
    78  001ADB  FF                 	db	255
    79  001ADC  FF                 	db	255
    80  001ADD  00                 	db	0
    81                           
    82                           ;initializer for _Dio_configutation_A_7_seg
    83  001ADE  00                 	db	0
    84  001ADF  0C                 	db	12
    85  001AE0  FF                 	db	255
    86  001AE1  06                 	db	6
    87                           
    88                           ;initializer for _Dio_configutation_A_ADC
    89  001AE2  00                 	db	0
    90  001AE3  01                 	db	1
    91  001AE4  00                 	db	0
    92  001AE5  06                 	db	6
    93                           
    94                           ;initializer for _Dio_configutation_C
    95  001AE6  02                 	db	2
    96  001AE7  FF                 	db	255
    97  001AE8  00                 	db	0
    98  001AE9  00                 	db	0
    99                           
   100                           	psect	nvCOMRAM
   101  000034                     __pnvCOMRAM:
   102                           	callstack 0
   103  000034                     _is_init:
   104                           	callstack 0
   105  000034                     	ds	1
   106  0000                     _TRISA	set	3986
   107  0000                     _ADCON1	set	4033
   108  0000                     _PORTA	set	3968
   109  0000                     _SSPBUF	set	4041
   110  0000                     _SSP1BUF	set	4041
   111  0000                     _SSP1STAT	set	4039
   112  0000                     _SSP1ADD	set	4040
   113  0000                     _SSP1CON2	set	4037
   114  0000                     _SSP1CON1	set	4038
   115  0000                     _RCEN1	set	32299
   116  0000                     _SSPIF	set	31987
   117                           
   118                           ; #config settings
   119                           
   120                           	psect	cinit
   121  001BF8                     __pcinit:
   122                           	callstack 0
   123  001BF8                     start_initialization:
   124                           	callstack 0
   125  001BF8                     __initialization:
   126                           	callstack 0
   127                           
   128                           ; Initialize objects allocated to COMRAM (20 bytes)
   129                           ; load TBLPTR registers with __pidataCOMRAM
   130  001BF8  0ED6               	movlw	low __pidataCOMRAM
   131  001BFA  6EF6               	movwf	tblptrl,c
   132  001BFC  0E1A               	movlw	high __pidataCOMRAM
   133  001BFE  6EF7               	movwf	tblptrh,c
   134  001C00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   135  001C02  6EF8               	movwf	tblptru,c
   136  001C04  EE00  F01A         	lfsr	0,__pdataCOMRAM
   137  001C08  EE10 F014          	lfsr	1,20
   138  001C0C                     copy_data0:
   139  001C0C  0009               	tblrd		*+
   140  001C0E  CFF5 FFEE          	movff	tablat,postinc0
   141  001C12  50E5               	movf	postdec1,w,c
   142  001C14  50E1               	movf	fsr1l,w,c
   143  001C16  E1FA               	bnz	copy_data0
   144                           
   145                           ; Clear objects allocated to COMRAM (6 bytes)
   146  001C18  6A33               	clrf	(__pbssCOMRAM+5)& (0+255),c
   147  001C1A  6A32               	clrf	(__pbssCOMRAM+4)& (0+255),c
   148  001C1C  6A31               	clrf	(__pbssCOMRAM+3)& (0+255),c
   149  001C1E  6A30               	clrf	(__pbssCOMRAM+2)& (0+255),c
   150  001C20  6A2F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   151  001C22  6A2E               	clrf	__pbssCOMRAM& (0+255),c
   152  001C24                     end_of_initialization:
   153                           	callstack 0
   154  001C24                     __end_of__initialization:
   155                           	callstack 0
   156  001C24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  001C26  6EF8               	movwf	tblptru,c
   158  001C28  0100               	movlb	0
   159  001C2A  EF17  F00E         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  00002E                     __pbssCOMRAM:
   163                           	callstack 0
   164  00002E                     _Dio_configutation_E:
   165                           	callstack 0
   166  00002E                     	ds	4
   167  000032                     DIO_Write@first_powerup:
   168                           	callstack 0
   169  000032                     	ds	1
   170  000033                     DIO_init@first_powerup_init:
   171                           	callstack 0
   172  000033                     	ds	1
   173                           
   174                           	psect	dataCOMRAM
   175  00001A                     __pdataCOMRAM:
   176                           	callstack 0
   177  00001A                     _Dio_configutation_D:
   178                           	callstack 0
   179  00001A                     	ds	4
   180  00001E                     _Dio_configutation_B:
   181                           	callstack 0
   182  00001E                     	ds	4
   183  000022                     _Dio_configutation_A_7_seg:
   184                           	callstack 0
   185  000022                     	ds	4
   186  000026                     _Dio_configutation_A_ADC:
   187                           	callstack 0
   188  000026                     	ds	4
   189  00002A                     _Dio_configutation_C:
   190                           	callstack 0
   191  00002A                     	ds	4
   192                           
   193                           	psect	cstackCOMRAM
   194  000001                     __pcstackCOMRAM:
   195                           	callstack 0
   196  000001                     ??_I2C_Master_Wait:
   197  000001                     ?___lldiv:
   198                           	callstack 0
   199  000001                     DIO_init@DIO_info:
   200                           	callstack 0
   201  000001                     ___lldiv@dividend:
   202                           	callstack 0
   203                           
   204                           ; 4 bytes @ 0x0
   205  000001                     	ds	1
   206  000002                     I2C_Master_Write@data:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x1
   210  000002                     	ds	1
   211  000003                     ??_DIO_init:
   212  000003                     EEPROM_Write@add:
   213                           	callstack 0
   214  000003                     EEPROM_Read@add:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x2
   218  000003                     	ds	2
   219  000005                     EEPROM_Write@data:
   220                           	callstack 0
   221  000005                     EEPROM_Read@Data:
   222                           	callstack 0
   223  000005                     DIO_init@ret_error:
   224                           	callstack 0
   225  000005                     ___lldiv@divisor:
   226                           	callstack 0
   227                           
   228                           ; 4 bytes @ 0x4
   229  000005                     	ds	1
   230  000006                     nvm_Read@u8_data:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x5
   234  000006                     	ds	2
   235  000008                     nvm_Read@u16_address:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x7
   239  000008                     	ds	1
   240  000009                     ___lldiv@quotient:
   241                           	callstack 0
   242                           
   243                           ; 4 bytes @ 0x8
   244  000009                     	ds	1
   245  00000A                     
   246                           ; 1 bytes @ 0x9
   247  00000A                     	ds	3
   248  00000D                     ___lldiv@counter:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0xC
   252  00000D                     	ds	1
   253  00000E                     I2C_Master_Init@baud:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0xD
   257  00000E                     	ds	4
   258  000012                     ??_I2C_Master_Init:
   259                           
   260                           ; 1 bytes @ 0x11
   261  000012                     	ds	4
   262  000016                     nvm_Write@u16_address:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x15
   266  000016                     	ds	2
   267  000018                     
   268                           ; 1 bytes @ 0x17
   269  000018                     	ds	1
   270  000019                     nvm_Write@u8_data:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x18
   274  000019                     	ds	1
   275  00001A                     
   276                           ; 1 bytes @ 0x19
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 11 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  data_read_ee    1    0        unsigned char 
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1
   296 ;;      Params:         0       0       0
   297 ;;      Locals:         1       0       0
   298 ;;      Temps:          0       0       0
   299 ;;      Totals:         1       0       0
   300 ;;Total ram usage:        1 bytes
   301 ;; Hardware stack levels required when called:    4
   302 ;; This function calls:
   303 ;;		_nvm_Read
   304 ;;		_nvm_Write
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311  001C2E                     __ptext0:
   312                           	callstack 0
   313  001C2E                     _main:
   314                           	callstack 27
   315  001C2E                     
   316                           ;main.c: 13:     nvm_Write('M',0x7f00);
   317  001C2E  0E7F               	movlw	127
   318  001C30  6E17               	movwf	(nvm_Write@u16_address+1)^0,c
   319  001C32  0E00               	movlw	0
   320  001C34  6E16               	movwf	nvm_Write@u16_address^0,c
   321  001C36  0E4D               	movlw	77
   322  001C38  ECB5  F00D         	call	_nvm_Write
   323  001C3C                     
   324                           ;main.c: 14:     nvm_Read(data_read_eeprom,0x7f00);
   325  001C3C  0E00               	movlw	0
   326  001C3E  6E06               	movwf	nvm_Read@u8_data^0,c
   327  001C40  0E00               	movlw	0
   328  001C42  6E07               	movwf	(nvm_Read@u8_data+1)^0,c
   329  001C44  0E7F               	movlw	127
   330  001C46  6E09               	movwf	(nvm_Read@u16_address+1)^0,c
   331  001C48  0E00               	movlw	0
   332  001C4A  6E08               	movwf	nvm_Read@u16_address^0,c
   333  001C4C  EC75  F00D         	call	_nvm_Read	;wreg free
   334  001C50                     
   335                           ;main.c: 15:         nvm_Write(data_read_eeprom,0x7f21);
   336  001C50  0E7F               	movlw	127
   337  001C52  6E17               	movwf	(nvm_Write@u16_address+1)^0,c
   338  001C54  0E21               	movlw	33
   339  001C56  6E16               	movwf	nvm_Write@u16_address^0,c
   340  001C58  0E00               	movlw	0
   341  001C5A  ECB5  F00D         	call	_nvm_Write
   342  001C5E                     l215:
   343  001C5E  EF2F  F00E         	goto	l215
   344  001C62  EF00  F000         	goto	start
   345  001C66                     __end_of_main:
   346                           	callstack 0
   347                           
   348 ;; *************** function _nvm_Write *****************
   349 ;; Defined at:
   350 ;;		line 3 in file "nvm.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  u8_data         1    wreg     unsigned char 
   353 ;;  u16_address     2   21[COMRAM] unsigned int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  u8_data         1   24[COMRAM] unsigned char 
   356 ;;  ret_error       1    0        unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      unsigned char 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1
   366 ;;      Params:         2       0       0
   367 ;;      Locals:         2       0       0
   368 ;;      Temps:          0       0       0
   369 ;;      Totals:         4       0       0
   370 ;;Total ram usage:        4 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    3
   373 ;; This function calls:
   374 ;;		_EEPROM_Write
   375 ;;		_I2C_Master_Init
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text1
   382  001B6A                     __ptext1:
   383                           	callstack 0
   384  001B6A                     _nvm_Write:
   385                           	callstack 27
   386                           
   387                           ;incstack = 0
   388                           ;nvm_Write@u8_data stored from wreg
   389  001B6A  6E19               	movwf	nvm_Write@u8_data^0,c
   390  001B6C                     
   391                           ;nvm.c: 5:  I2C_Master_Init(100000);
   392  001B6C  0EA0               	movlw	160
   393  001B6E  6E0E               	movwf	I2C_Master_Init@baud^0,c
   394  001B70  0E86               	movlw	134
   395  001B72  6E0F               	movwf	(I2C_Master_Init@baud+1)^0,c
   396  001B74  0E01               	movlw	1
   397  001B76  6E10               	movwf	(I2C_Master_Init@baud+2)^0,c
   398  001B78  0E00               	movlw	0
   399  001B7A  6E11               	movwf	(I2C_Master_Init@baud+3)^0,c
   400  001B7C  EC33  F00E         	call	_I2C_Master_Init	;wreg free
   401  001B80                     
   402                           ;nvm.c: 6:  EEPROM_Write(u16_address, u8_data);
   403  001B80  C016  F003         	movff	nvm_Write@u16_address,EEPROM_Write@add
   404  001B84  C017  F004         	movff	nvm_Write@u16_address+1,EEPROM_Write@add+1
   405  001B88  C019  F005         	movff	nvm_Write@u8_data,EEPROM_Write@data
   406  001B8C  ECE1  F00D         	call	_EEPROM_Write	;wreg free
   407  001B90  0012               	return		;funcret
   408  001B92                     __end_of_nvm_Write:
   409                           	callstack 0
   410                           
   411 ;; *************** function _I2C_Master_Init *****************
   412 ;; Defined at:
   413 ;;		line 10 in file "i2c_EEPROM.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  baud            4   13[COMRAM] const unsigned long 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1
   427 ;;      Params:         4       0       0
   428 ;;      Locals:         0       0       0
   429 ;;      Temps:          4       0       0
   430 ;;      Totals:         8       0       0
   431 ;;Total ram usage:        8 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    1
   434 ;; This function calls:
   435 ;;		_DIO_init
   436 ;;		___lldiv
   437 ;; This function is called by:
   438 ;;		_nvm_Write
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text2
   443  001C66                     __ptext2:
   444                           	callstack 0
   445  001C66                     _I2C_Master_Init:
   446                           	callstack 28
   447  001C66                     
   448                           ;i2c_EEPROM.c: 10: void I2C_Master_Init(const unsigned long baud);i2c_EEPROM.c: 11: {;i2
      +                          c_EEPROM.c: 12:   SSP1CON1 = 0b00101000;
   449  001C66  0E28               	movlw	40
   450  001C68  6EC6               	movwf	198,c	;volatile
   451                           
   452                           ;i2c_EEPROM.c: 13:   SSP1CON2 = 0;
   453  001C6A  0E00               	movlw	0
   454  001C6C  6EC5               	movwf	197,c	;volatile
   455  001C6E                     
   456                           ;i2c_EEPROM.c: 14:   SSP1ADD = (unsigned char)(16000000/(4*baud))-1;
   457  001C6E  0E00               	movlw	0
   458  001C70  6E01               	movwf	___lldiv@dividend^0,c
   459  001C72  0E24               	movlw	36
   460  001C74  6E02               	movwf	(___lldiv@dividend+1)^0,c
   461  001C76  0EF4               	movlw	244
   462  001C78  6E03               	movwf	(___lldiv@dividend+2)^0,c
   463  001C7A  0E00               	movlw	0
   464  001C7C  6E04               	movwf	(___lldiv@dividend+3)^0,c
   465  001C7E  C00E  F012         	movff	I2C_Master_Init@baud,??_I2C_Master_Init
   466  001C82  C00F  F013         	movff	I2C_Master_Init@baud+1,??_I2C_Master_Init+1
   467  001C86  C010  F014         	movff	I2C_Master_Init@baud+2,??_I2C_Master_Init+2
   468  001C8A  C011  F015         	movff	I2C_Master_Init@baud+3,??_I2C_Master_Init+3
   469  001C8E  0E02               	movlw	2
   470  001C90                     u245:
   471  001C90  90D8               	bcf	status,0,c
   472  001C92  3612               	rlcf	??_I2C_Master_Init^0,f,c
   473  001C94  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
   474  001C96  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
   475  001C98  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
   476  001C9A  2EE8               	decfsz	wreg,f,c
   477  001C9C  EF48  F00E         	goto	u245
   478  001CA0  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
   479  001CA4  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
   480  001CA8  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
   481  001CAC  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
   482  001CB0  EC65  F00E         	call	___lldiv	;wreg free
   483  001CB4  0401               	decf	?___lldiv^0,w,c
   484  001CB6  6EC8               	movwf	200,c	;volatile
   485  001CB8                     
   486                           ;i2c_EEPROM.c: 15:   SSP1STAT = 0;
   487  001CB8  0E00               	movlw	0
   488  001CBA  6EC7               	movwf	199,c	;volatile
   489  001CBC                     
   490                           ;i2c_EEPROM.c: 16:  DIO_init (&Dio_configutation_C);
   491  001CBC  0E2A               	movlw	low _Dio_configutation_C
   492  001CBE  6E01               	movwf	DIO_init@DIO_info^0,c
   493  001CC0  0E00               	movlw	high _Dio_configutation_C
   494  001CC2  6E02               	movwf	(DIO_init@DIO_info+1)^0,c
   495  001CC4  ECB7  F00E         	call	_DIO_init	;wreg free
   496  001CC8  0012               	return		;funcret
   497  001CCA                     __end_of_I2C_Master_Init:
   498                           	callstack 0
   499                           
   500 ;; *************** function ___lldiv *****************
   501 ;; Defined at:
   502 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  dividend        4    0[COMRAM] unsigned long 
   505 ;;  divisor         4    4[COMRAM] unsigned long 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  quotient        4    8[COMRAM] unsigned long 
   508 ;;  counter         1   12[COMRAM] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  4    0[COMRAM] unsigned long 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1
   518 ;;      Params:         8       0       0
   519 ;;      Locals:         5       0       0
   520 ;;      Temps:          0       0       0
   521 ;;      Totals:        13       0       0
   522 ;;Total ram usage:       13 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_I2C_Master_Init
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text3
   532  001CCA                     __ptext3:
   533                           	callstack 0
   534  001CCA                     ___lldiv:
   535                           	callstack 28
   536  001CCA  0E00               	movlw	0
   537  001CCC  6E09               	movwf	___lldiv@quotient^0,c
   538  001CCE  0E00               	movlw	0
   539  001CD0  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   540  001CD2  0E00               	movlw	0
   541  001CD4  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   542  001CD6  0E00               	movlw	0
   543  001CD8  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   544  001CDA  5005               	movf	___lldiv@divisor^0,w,c
   545  001CDC  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   546  001CDE  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   547  001CE0  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   548  001CE2  B4D8               	btfsc	status,2,c
   549  001CE4  EF76  F00E         	goto	u211
   550  001CE8  EF78  F00E         	goto	u210
   551  001CEC                     u211:
   552  001CEC  EFAE  F00E         	goto	l248
   553  001CF0                     u210:
   554  001CF0  0E01               	movlw	1
   555  001CF2  6E0D               	movwf	___lldiv@counter^0,c
   556  001CF4  EF82  F00E         	goto	l1416
   557  001CF8                     l1414:
   558  001CF8  90D8               	bcf	status,0,c
   559  001CFA  3605               	rlcf	___lldiv@divisor^0,f,c
   560  001CFC  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   561  001CFE  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   562  001D00  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   563  001D02  2A0D               	incf	___lldiv@counter^0,f,c
   564  001D04                     l1416:
   565  001D04  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   566  001D06  EF87  F00E         	goto	u221
   567  001D0A  EF89  F00E         	goto	u220
   568  001D0E                     u221:
   569  001D0E  EF7C  F00E         	goto	l1414
   570  001D12                     u220:
   571  001D12                     l1418:
   572  001D12  90D8               	bcf	status,0,c
   573  001D14  3609               	rlcf	___lldiv@quotient^0,f,c
   574  001D16  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   575  001D18  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   576  001D1A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   577  001D1C  5005               	movf	___lldiv@divisor^0,w,c
   578  001D1E  5C01               	subwf	___lldiv@dividend^0,w,c
   579  001D20  5006               	movf	(___lldiv@divisor+1)^0,w,c
   580  001D22  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   581  001D24  5007               	movf	(___lldiv@divisor+2)^0,w,c
   582  001D26  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   583  001D28  5008               	movf	(___lldiv@divisor+3)^0,w,c
   584  001D2A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   585  001D2C  A0D8               	btfss	status,0,c
   586  001D2E  EF9B  F00E         	goto	u231
   587  001D32  EF9D  F00E         	goto	u230
   588  001D36                     u231:
   589  001D36  EFA6  F00E         	goto	l1426
   590  001D3A                     u230:
   591  001D3A  5005               	movf	___lldiv@divisor^0,w,c
   592  001D3C  5E01               	subwf	___lldiv@dividend^0,f,c
   593  001D3E  5006               	movf	(___lldiv@divisor+1)^0,w,c
   594  001D40  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   595  001D42  5007               	movf	(___lldiv@divisor+2)^0,w,c
   596  001D44  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   597  001D46  5008               	movf	(___lldiv@divisor+3)^0,w,c
   598  001D48  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   599  001D4A  8009               	bsf	___lldiv@quotient^0,0,c
   600  001D4C                     l1426:
   601  001D4C  90D8               	bcf	status,0,c
   602  001D4E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   603  001D50  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   604  001D52  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   605  001D54  3205               	rrcf	___lldiv@divisor^0,f,c
   606  001D56  2E0D               	decfsz	___lldiv@counter^0,f,c
   607  001D58  EF89  F00E         	goto	l1418
   608  001D5C                     l248:
   609  001D5C  C009  F001         	movff	___lldiv@quotient,?___lldiv
   610  001D60  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   611  001D64  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   612  001D68  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   613  001D6C  0012               	return		;funcret
   614  001D6E                     __end_of___lldiv:
   615                           	callstack 0
   616                           
   617 ;; *************** function _DIO_init *****************
   618 ;; Defined at:
   619 ;;		line 11 in file "DIO.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  DIO_info        2    0[COMRAM] PTR struct DIO_Cfg_s
   622 ;;		 -> Dio_configutation_C(4), 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  ret_error       1    4[COMRAM] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      unsigned char 
   627 ;; Registers used:
   628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1
   634 ;;      Params:         2       0       0
   635 ;;      Locals:         1       0       0
   636 ;;      Temps:          2       0       0
   637 ;;      Totals:         5       0       0
   638 ;;Total ram usage:        5 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_I2C_Master_Init
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text4
   648  001D6E                     __ptext4:
   649                           	callstack 0
   650  001D6E                     _DIO_init:
   651                           	callstack 28
   652  001D6E                     
   653                           ;DIO.c: 11: ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info);DIO.c: 12: {;DIO.c: 13: uint8_t 
      +                          ret_error=0;
   654  001D6E  0E00               	movlw	0
   655  001D70  6E05               	movwf	DIO_init@ret_error^0,c
   656                           
   657                           ;DIO.c: 14: static uint8_t first_powerup_init = 0;;DIO.c: 15: is_init=1;
   658  001D72  0E01               	movlw	1
   659  001D74  6E34               	movwf	_is_init^0,c
   660                           
   661                           ;DIO.c: 16:  if (first_powerup_init == 0) {
   662  001D76  5033               	movf	DIO_init@first_powerup_init^0,w,c
   663  001D78  A4D8               	btfss	status,2,c
   664  001D7A  EFC1  F00E         	goto	u181
   665  001D7E  EFC3  F00E         	goto	u180
   666  001D82                     u181:
   667  001D82  EF02  F00F         	goto	l1342
   668  001D86                     u180:
   669  001D86  EFDC  F00E         	goto	l1338
   670  001D8A                     l1326:
   671                           
   672                           ;DIO.c: 20:   PORTA=0x00;
   673  001D8A  0E00               	movlw	0
   674  001D8C  6E80               	movwf	128,c	;volatile
   675                           
   676                           ;DIO.c: 21:       break;
   677  001D8E  EF01  F00F         	goto	l1340
   678  001D92                     l1328:
   679                           
   680                           ;DIO.c: 23:   *((reg_type8_t)(0x0086))=0x00;
   681  001D92  0E00               	movlw	0
   682  001D94  0100               	movlb	0	; () banked
   683  001D96  6F86               	movwf	134,b	;volatile
   684                           
   685                           ;DIO.c: 24:       break;
   686  001D98  EF01  F00F         	goto	l1340
   687  001D9C                     l1330:
   688                           
   689                           ;DIO.c: 26:   *((reg_type8_t)(0x0F94))=0x00;
   690  001D9C  0E00               	movlw	0
   691  001D9E  6E94               	movwf	148,c	;volatile
   692                           
   693                           ;DIO.c: 27:       break;
   694  001DA0  EF01  F00F         	goto	l1340
   695  001DA4                     l1332:
   696                           
   697                           ;DIO.c: 29:   *((reg_type8_t)(0x0088))=0x00;
   698  001DA4  0E00               	movlw	0
   699  001DA6  0100               	movlb	0	; () banked
   700  001DA8  6F88               	movwf	136,b	;volatile
   701                           
   702                           ;DIO.c: 30:       break;
   703  001DAA  EF01  F00F         	goto	l1340
   704  001DAE                     l1334:
   705                           
   706                           ;DIO.c: 32:   *((reg_type8_t)(0x0089))=0x00;
   707  001DAE  0E00               	movlw	0
   708  001DB0  0100               	movlb	0	; () banked
   709  001DB2  6F89               	movwf	137,b	;volatile
   710                           
   711                           ;DIO.c: 33:       break;
   712  001DB4  EF01  F00F         	goto	l1340
   713  001DB8                     l1338:
   714  001DB8  C001  FFD9         	movff	DIO_init@DIO_info,fsr2l
   715  001DBC  C002  FFDA         	movff	DIO_init@DIO_info+1,fsr2h
   716  001DC0  50DF               	movf	indf2,w,c
   717  001DC2  6E03               	movwf	??_DIO_init^0,c
   718  001DC4  6A04               	clrf	(??_DIO_init+1)^0,c
   719                           
   720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   721                           ; Switch size 1, requested type "simple"
   722                           ; Number of cases is 1, Range of values is 0 to 0
   723                           ; switch strategies available:
   724                           ; Name         Instructions Cycles
   725                           ; simple_byte            4     3 (average)
   726                           ;	Chosen strategy is simple_byte
   727  001DC6  5004               	movf	(??_DIO_init+1)^0,w,c
   728  001DC8  0A00               	xorlw	0	; case 0
   729  001DCA  B4D8               	btfsc	status,2,c
   730  001DCC  EFEA  F00E         	goto	l1550
   731  001DD0  EF01  F00F         	goto	l1340
   732  001DD4                     l1550:
   733                           
   734                           ; Switch size 1, requested type "simple"
   735                           ; Number of cases is 5, Range of values is 0 to 4
   736                           ; switch strategies available:
   737                           ; Name         Instructions Cycles
   738                           ; simple_byte           16     9 (average)
   739                           ;	Chosen strategy is simple_byte
   740  001DD4  5003               	movf	??_DIO_init^0,w,c
   741  001DD6  0A00               	xorlw	0	; case 0
   742  001DD8  B4D8               	btfsc	status,2,c
   743  001DDA  EFC5  F00E         	goto	l1326
   744  001DDE  0A01               	xorlw	1	; case 1
   745  001DE0  B4D8               	btfsc	status,2,c
   746  001DE2  EFC9  F00E         	goto	l1328
   747  001DE6  0A03               	xorlw	3	; case 2
   748  001DE8  B4D8               	btfsc	status,2,c
   749  001DEA  EFCE  F00E         	goto	l1330
   750  001DEE  0A01               	xorlw	1	; case 3
   751  001DF0  B4D8               	btfsc	status,2,c
   752  001DF2  EFD2  F00E         	goto	l1332
   753  001DF6  0A07               	xorlw	7	; case 4
   754  001DF8  B4D8               	btfsc	status,2,c
   755  001DFA  EFD7  F00E         	goto	l1334
   756  001DFE  EF01  F00F         	goto	l1340
   757  001E02                     l1340:
   758                           
   759                           ;DIO.c: 35:   first_powerup_init++;
   760  001E02  2A33               	incf	DIO_init@first_powerup_init^0,f,c
   761  001E04                     l1342:
   762                           
   763                           ;DIO.c: 37: if((DIO_info -> port)== 0)
   764  001E04  C001  FFD9         	movff	DIO_init@DIO_info,fsr2l
   765  001E08  C002  FFDA         	movff	DIO_init@DIO_info+1,fsr2h
   766  001E0C  50DF               	movf	indf2,w,c
   767  001E0E  A4D8               	btfss	status,2,c
   768  001E10  EF0C  F00F         	goto	u191
   769  001E14  EF0E  F00F         	goto	u190
   770  001E18                     u191:
   771  001E18  EF16  F00F         	goto	l1346
   772  001E1C                     u190:
   773  001E1C                     
   774                           ;DIO.c: 38:  ADCON1 |=( DIO_info -> operation_mode) ;
   775  001E1C  EE20 F003          	lfsr	2,3
   776  001E20  5001               	movf	DIO_init@DIO_info^0,w,c
   777  001E22  26D9               	addwf	fsr2l,f,c
   778  001E24  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   779  001E26  22DA               	addwfc	fsr2h,f,c
   780  001E28  50DF               	movf	indf2,w,c
   781  001E2A  12C1               	iorwf	193,f,c	;volatile
   782  001E2C                     l1346:
   783                           
   784                           ;DIO.c: 39: if(DIO_info != '\0'){
   785  001E2C  5001               	movf	DIO_init@DIO_info^0,w,c
   786  001E2E  1002               	iorwf	(DIO_init@DIO_info+1)^0,w,c
   787  001E30  B4D8               	btfsc	status,2,c
   788  001E32  EF1D  F00F         	goto	u201
   789  001E36  EF1F  F00F         	goto	u200
   790  001E3A                     u201:
   791  001E3A  EFFD  F00F         	goto	l1388
   792  001E3E                     u200:
   793  001E3E  EFE2  F00F         	goto	l1386
   794  001E42                     l1350:
   795                           
   796                           ;DIO.c: 48:            PORTA |=(DIO_info-> pin) ;
   797  001E42  EE20 F001          	lfsr	2,1
   798  001E46  5001               	movf	DIO_init@DIO_info^0,w,c
   799  001E48  26D9               	addwf	fsr2l,f,c
   800  001E4A  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   801  001E4C  22DA               	addwfc	fsr2h,f,c
   802  001E4E  50DF               	movf	indf2,w,c
   803  001E50  1280               	iorwf	128,f,c	;volatile
   804                           
   805                           ;DIO.c: 49:             break;
   806  001E52  EFFF  F00F         	goto	l138
   807  001E56                     l1352:
   808                           
   809                           ;DIO.c: 52:                 *((reg_type8_t)(0x0086)) |=(DIO_info->pin) ;
   810  001E56  EE20 F001          	lfsr	2,1
   811  001E5A  5001               	movf	DIO_init@DIO_info^0,w,c
   812  001E5C  26D9               	addwf	fsr2l,f,c
   813  001E5E  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   814  001E60  22DA               	addwfc	fsr2h,f,c
   815  001E62  50DF               	movf	indf2,w,c
   816  001E64  0100               	movlb	0	; () banked
   817  001E66  1386               	iorwf	134,f,b	;volatile
   818                           
   819                           ;DIO.c: 53:             break;
   820  001E68  EFFF  F00F         	goto	l138
   821  001E6C                     l1354:
   822                           
   823                           ;DIO.c: 56:                 *((reg_type8_t)(0x0F94)) |=(DIO_info->pin) ;
   824  001E6C  EE20 F001          	lfsr	2,1
   825  001E70  5001               	movf	DIO_init@DIO_info^0,w,c
   826  001E72  26D9               	addwf	fsr2l,f,c
   827  001E74  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   828  001E76  22DA               	addwfc	fsr2h,f,c
   829  001E78  50DF               	movf	indf2,w,c
   830  001E7A  1294               	iorwf	148,f,c	;volatile
   831                           
   832                           ;DIO.c: 57:             break;
   833  001E7C  EFFF  F00F         	goto	l138
   834  001E80                     l1356:
   835                           
   836                           ;DIO.c: 60:                 *((reg_type8_t)(0x0088)) |=(DIO_info->pin) ;
   837  001E80  EE20 F001          	lfsr	2,1
   838  001E84  5001               	movf	DIO_init@DIO_info^0,w,c
   839  001E86  26D9               	addwf	fsr2l,f,c
   840  001E88  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   841  001E8A  22DA               	addwfc	fsr2h,f,c
   842  001E8C  50DF               	movf	indf2,w,c
   843  001E8E  0100               	movlb	0	; () banked
   844  001E90  1388               	iorwf	136,f,b	;volatile
   845                           
   846                           ;DIO.c: 61:             break;
   847  001E92  EFFF  F00F         	goto	l138
   848  001E96                     l1358:
   849                           
   850                           ;DIO.c: 64:             *((reg_type8_t)(0x0089)) |=(DIO_info->pin) ;
   851  001E96  EE20 F001          	lfsr	2,1
   852  001E9A  5001               	movf	DIO_init@DIO_info^0,w,c
   853  001E9C  26D9               	addwf	fsr2l,f,c
   854  001E9E  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   855  001EA0  22DA               	addwfc	fsr2h,f,c
   856  001EA2  50DF               	movf	indf2,w,c
   857  001EA4  0100               	movlb	0	; () banked
   858  001EA6  1389               	iorwf	137,f,b	;volatile
   859                           
   860                           ;DIO.c: 65:             break;
   861  001EA8  EFFF  F00F         	goto	l138
   862  001EAC                     l1360:
   863                           
   864                           ;DIO.c: 67:             ret_error += 1 +14;
   865  001EAC  0E0F               	movlw	15
   866  001EAE  2605               	addwf	DIO_init@ret_error^0,f,c
   867                           
   868                           ;DIO.c: 68:             break;
   869  001EB0  EFFF  F00F         	goto	l138
   870  001EB4                     l1364:
   871  001EB4  C001  FFD9         	movff	DIO_init@DIO_info,fsr2l
   872  001EB8  C002  FFDA         	movff	DIO_init@DIO_info+1,fsr2h
   873  001EBC  50DF               	movf	indf2,w,c
   874  001EBE  6E03               	movwf	??_DIO_init^0,c
   875  001EC0  6A04               	clrf	(??_DIO_init+1)^0,c
   876                           
   877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 1, Range of values is 0 to 0
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte            4     3 (average)
   883                           ;	Chosen strategy is simple_byte
   884  001EC2  5004               	movf	(??_DIO_init+1)^0,w,c
   885  001EC4  0A00               	xorlw	0	; case 0
   886  001EC6  B4D8               	btfsc	status,2,c
   887  001EC8  EF68  F00F         	goto	l1552
   888  001ECC  EF56  F00F         	goto	l1360
   889  001ED0                     l1552:
   890                           
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 5, Range of values is 0 to 4
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte           16     9 (average)
   896                           ;	Chosen strategy is simple_byte
   897  001ED0  5003               	movf	??_DIO_init^0,w,c
   898  001ED2  0A00               	xorlw	0	; case 0
   899  001ED4  B4D8               	btfsc	status,2,c
   900  001ED6  EF21  F00F         	goto	l1350
   901  001EDA  0A01               	xorlw	1	; case 1
   902  001EDC  B4D8               	btfsc	status,2,c
   903  001EDE  EF2B  F00F         	goto	l1352
   904  001EE2  0A03               	xorlw	3	; case 2
   905  001EE4  B4D8               	btfsc	status,2,c
   906  001EE6  EF36  F00F         	goto	l1354
   907  001EEA  0A01               	xorlw	1	; case 3
   908  001EEC  B4D8               	btfsc	status,2,c
   909  001EEE  EF40  F00F         	goto	l1356
   910  001EF2  0A07               	xorlw	7	; case 4
   911  001EF4  B4D8               	btfsc	status,2,c
   912  001EF6  EF4B  F00F         	goto	l1358
   913  001EFA  EF56  F00F         	goto	l1360
   914  001EFE                     l1366:
   915                           
   916                           ;DIO.c: 75:         PORTA &=(~(DIO_info->pin)) ;
   917  001EFE  EE20 F001          	lfsr	2,1
   918  001F02  5001               	movf	DIO_init@DIO_info^0,w,c
   919  001F04  26D9               	addwf	fsr2l,f,c
   920  001F06  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   921  001F08  22DA               	addwfc	fsr2h,f,c
   922  001F0A  50DF               	movf	indf2,w,c
   923  001F0C  0AFF               	xorlw	255
   924  001F0E  1680               	andwf	128,f,c	;volatile
   925                           
   926                           ;DIO.c: 76:       break;
   927  001F10  EFFF  F00F         	goto	l138
   928  001F14                     l1368:
   929                           
   930                           ;DIO.c: 78:         *((reg_type8_t)(0x0086)) &=(~(DIO_info->pin)) ;
   931  001F14  EE20 F001          	lfsr	2,1
   932  001F18  5001               	movf	DIO_init@DIO_info^0,w,c
   933  001F1A  26D9               	addwf	fsr2l,f,c
   934  001F1C  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   935  001F1E  22DA               	addwfc	fsr2h,f,c
   936  001F20  50DF               	movf	indf2,w,c
   937  001F22  0AFF               	xorlw	255
   938  001F24  0100               	movlb	0	; () banked
   939  001F26  1786               	andwf	134,f,b	;volatile
   940                           
   941                           ;DIO.c: 79:       break;
   942  001F28  EFFF  F00F         	goto	l138
   943  001F2C                     l1370:
   944                           
   945                           ;DIO.c: 81:         *((reg_type8_t)(0x0F94)) &=(~(DIO_info->pin)) ;
   946  001F2C  EE20 F001          	lfsr	2,1
   947  001F30  5001               	movf	DIO_init@DIO_info^0,w,c
   948  001F32  26D9               	addwf	fsr2l,f,c
   949  001F34  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   950  001F36  22DA               	addwfc	fsr2h,f,c
   951  001F38  50DF               	movf	indf2,w,c
   952  001F3A  0AFF               	xorlw	255
   953  001F3C  1694               	andwf	148,f,c	;volatile
   954                           
   955                           ;DIO.c: 82:       break;
   956  001F3E  EFFF  F00F         	goto	l138
   957  001F42                     l1372:
   958                           
   959                           ;DIO.c: 84:         *((reg_type8_t)(0x0088)) &=(~(DIO_info->pin)) ;
   960  001F42  EE20 F001          	lfsr	2,1
   961  001F46  5001               	movf	DIO_init@DIO_info^0,w,c
   962  001F48  26D9               	addwf	fsr2l,f,c
   963  001F4A  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   964  001F4C  22DA               	addwfc	fsr2h,f,c
   965  001F4E  50DF               	movf	indf2,w,c
   966  001F50  0AFF               	xorlw	255
   967  001F52  0100               	movlb	0	; () banked
   968  001F54  1788               	andwf	136,f,b	;volatile
   969                           
   970                           ;DIO.c: 85:       break;
   971  001F56  EFFF  F00F         	goto	l138
   972  001F5A                     l1374:
   973                           
   974                           ;DIO.c: 87:         *((reg_type8_t)(0x0089)) &=(~(DIO_info->pin)) ;
   975  001F5A  EE20 F001          	lfsr	2,1
   976  001F5E  5001               	movf	DIO_init@DIO_info^0,w,c
   977  001F60  26D9               	addwf	fsr2l,f,c
   978  001F62  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
   979  001F64  22DA               	addwfc	fsr2h,f,c
   980  001F66  50DF               	movf	indf2,w,c
   981  001F68  0AFF               	xorlw	255
   982  001F6A  0100               	movlb	0	; () banked
   983  001F6C  1789               	andwf	137,f,b	;volatile
   984                           
   985                           ;DIO.c: 88:       break;
   986  001F6E  EFFF  F00F         	goto	l138
   987  001F72                     l1380:
   988  001F72  C001  FFD9         	movff	DIO_init@DIO_info,fsr2l
   989  001F76  C002  FFDA         	movff	DIO_init@DIO_info+1,fsr2h
   990  001F7A  50DF               	movf	indf2,w,c
   991  001F7C  6E03               	movwf	??_DIO_init^0,c
   992  001F7E  6A04               	clrf	(??_DIO_init+1)^0,c
   993                           
   994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 1, Range of values is 0 to 0
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            4     3 (average)
  1000                           ;	Chosen strategy is simple_byte
  1001  001F80  5004               	movf	(??_DIO_init+1)^0,w,c
  1002  001F82  0A00               	xorlw	0	; case 0
  1003  001F84  B4D8               	btfsc	status,2,c
  1004  001F86  EFC7  F00F         	goto	l1554
  1005  001F8A  EF56  F00F         	goto	l1360
  1006  001F8E                     l1554:
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 5, Range of values is 0 to 4
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte           16     9 (average)
  1013                           ;	Chosen strategy is simple_byte
  1014  001F8E  5003               	movf	??_DIO_init^0,w,c
  1015  001F90  0A00               	xorlw	0	; case 0
  1016  001F92  B4D8               	btfsc	status,2,c
  1017  001F94  EF7F  F00F         	goto	l1366
  1018  001F98  0A01               	xorlw	1	; case 1
  1019  001F9A  B4D8               	btfsc	status,2,c
  1020  001F9C  EF8A  F00F         	goto	l1368
  1021  001FA0  0A03               	xorlw	3	; case 2
  1022  001FA2  B4D8               	btfsc	status,2,c
  1023  001FA4  EF96  F00F         	goto	l1370
  1024  001FA8  0A01               	xorlw	1	; case 3
  1025  001FAA  B4D8               	btfsc	status,2,c
  1026  001FAC  EFA1  F00F         	goto	l1372
  1027  001FB0  0A07               	xorlw	7	; case 4
  1028  001FB2  B4D8               	btfsc	status,2,c
  1029  001FB4  EFAD  F00F         	goto	l1374
  1030  001FB8  EF56  F00F         	goto	l1360
  1031  001FBC                     l1382:
  1032                           
  1033                           ;DIO.c: 95: ret_error +=1 + 18;
  1034  001FBC  0E13               	movlw	19
  1035  001FBE  2605               	addwf	DIO_init@ret_error^0,f,c
  1036                           
  1037                           ;DIO.c: 96: break;
  1038  001FC0  EFFF  F00F         	goto	l138
  1039  001FC4                     l1386:
  1040  001FC4  EE20 F002          	lfsr	2,2
  1041  001FC8  5001               	movf	DIO_init@DIO_info^0,w,c
  1042  001FCA  26D9               	addwf	fsr2l,f,c
  1043  001FCC  5002               	movf	(DIO_init@DIO_info+1)^0,w,c
  1044  001FCE  22DA               	addwfc	fsr2h,f,c
  1045  001FD0  50DF               	movf	indf2,w,c
  1046  001FD2  6E03               	movwf	??_DIO_init^0,c
  1047  001FD4  6A04               	clrf	(??_DIO_init+1)^0,c
  1048                           
  1049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1050                           ; Switch size 1, requested type "simple"
  1051                           ; Number of cases is 1, Range of values is 0 to 0
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte            4     3 (average)
  1055                           ;	Chosen strategy is simple_byte
  1056  001FD6  5004               	movf	(??_DIO_init+1)^0,w,c
  1057  001FD8  0A00               	xorlw	0	; case 0
  1058  001FDA  B4D8               	btfsc	status,2,c
  1059  001FDC  EFF2  F00F         	goto	l1556
  1060  001FE0  EFDE  F00F         	goto	l1382
  1061  001FE4                     l1556:
  1062                           
  1063                           ; Switch size 1, requested type "simple"
  1064                           ; Number of cases is 2, Range of values is 0 to 255
  1065                           ; switch strategies available:
  1066                           ; Name         Instructions Cycles
  1067                           ; simple_byte            7     4 (average)
  1068                           ;	Chosen strategy is simple_byte
  1069  001FE4  5003               	movf	??_DIO_init^0,w,c
  1070  001FE6  0A00               	xorlw	0	; case 0
  1071  001FE8  B4D8               	btfsc	status,2,c
  1072  001FEA  EF5A  F00F         	goto	l1364
  1073  001FEE  0AFF               	xorlw	255	; case 255
  1074  001FF0  B4D8               	btfsc	status,2,c
  1075  001FF2  EFB9  F00F         	goto	l1380
  1076  001FF6  EFDE  F00F         	goto	l1382
  1077  001FFA                     l1388:
  1078                           
  1079                           ;DIO.c: 99: {;DIO.c: 100: ret_error +=1 +16;
  1080  001FFA  0E11               	movlw	17
  1081  001FFC  2605               	addwf	DIO_init@ret_error^0,f,c
  1082  001FFE                     l138:
  1083  001FFE  0012               	return		;funcret
  1084  002000                     __end_of_DIO_init:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _EEPROM_Write *****************
  1088 ;; Defined at:
  1089 ;;		line 74 in file "i2c_EEPROM.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  add             2    2[COMRAM] unsigned int 
  1092 ;;  data            1    4[COMRAM] unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1
  1104 ;;      Params:         3       0       0
  1105 ;;      Locals:         0       0       0
  1106 ;;      Temps:          0       0       0
  1107 ;;      Totals:         3       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    2
  1111 ;; This function calls:
  1112 ;;		_I2C_Master_RepeatedStart
  1113 ;;		_I2C_Master_Start
  1114 ;;		_I2C_Master_Stop
  1115 ;;		_I2C_Master_Write
  1116 ;; This function is called by:
  1117 ;;		_nvm_Write
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text5
  1122  001BC2                     __ptext5:
  1123                           	callstack 0
  1124  001BC2                     _EEPROM_Write:
  1125                           	callstack 27
  1126  001BC2                     
  1127                           ;i2c_EEPROM.c: 74: void EEPROM_Write(unsigned int add, unsigned char data);i2c_EEPROM.c:
      +                           75: {;i2c_EEPROM.c: 76:   I2C_Master_Start();
  1128  001BC2  EC5E  F00D         	call	_I2C_Master_Start	;wreg free
  1129                           
  1130                           ;i2c_EEPROM.c: 78:   if(I2C_Master_Write(0xA0))
  1131  001BC6  0EA0               	movlw	160
  1132  001BC8  EC90  F00D         	call	_I2C_Master_Write
  1133  001BCC  0900               	iorlw	0
  1134  001BCE  B4D8               	btfsc	status,2,c
  1135  001BD0  EFEC  F00D         	goto	u251
  1136  001BD4  EFEE  F00D         	goto	u250
  1137  001BD8                     u251:
  1138  001BD8  EFF0  F00D         	goto	l59
  1139  001BDC                     u250:
  1140  001BDC                     
  1141                           ;i2c_EEPROM.c: 79:     I2C_Master_RepeatedStart();
  1142  001BDC  EC5A  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
  1143  001BE0                     l59:
  1144                           
  1145                           ;i2c_EEPROM.c: 81:   I2C_Master_Write(add>>8);
  1146  001BE0  5004               	movf	(EEPROM_Write@add+1)^0,w,c
  1147  001BE2  EC90  F00D         	call	_I2C_Master_Write
  1148                           
  1149                           ;i2c_EEPROM.c: 82:   I2C_Master_Write((unsigned char)add);
  1150  001BE6  5003               	movf	EEPROM_Write@add^0,w,c
  1151  001BE8  EC90  F00D         	call	_I2C_Master_Write
  1152                           
  1153                           ;i2c_EEPROM.c: 83:   I2C_Master_Write(data);
  1154  001BEC  5005               	movf	EEPROM_Write@data^0,w,c
  1155  001BEE  EC90  F00D         	call	_I2C_Master_Write
  1156                           
  1157                           ;i2c_EEPROM.c: 84:   I2C_Master_Stop();
  1158  001BF2  EC62  F00D         	call	_I2C_Master_Stop	;wreg free
  1159  001BF6  0012               	return		;funcret
  1160  001BF8                     __end_of_EEPROM_Write:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _nvm_Read *****************
  1164 ;; Defined at:
  1165 ;;		line 11 in file "nvm.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  u8_data         2    5[COMRAM] PTR unsigned char 
  1168 ;;		 -> RAM(511), 
  1169 ;;  u16_address     2    7[COMRAM] unsigned int 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  ret_error       1    0        unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      unsigned char 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1
  1181 ;;      Params:         4       0       0
  1182 ;;      Locals:         1       0       0
  1183 ;;      Temps:          0       0       0
  1184 ;;      Totals:         5       0       0
  1185 ;;Total ram usage:        5 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		_EEPROM_Read
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text6
  1196  001AEA                     __ptext6:
  1197                           	callstack 0
  1198  001AEA                     _nvm_Read:
  1199                           	callstack 27
  1200  001AEA                     
  1201                           ;nvm.c: 14:  *u8_data=EEPROM_Read(u16_address);
  1202  001AEA  C008  F003         	movff	nvm_Read@u16_address,EEPROM_Read@add
  1203  001AEE  C009  F004         	movff	nvm_Read@u16_address+1,EEPROM_Read@add+1
  1204  001AF2  ECC9  F00D         	call	_EEPROM_Read	;wreg free
  1205  001AF6  C006  FFD9         	movff	nvm_Read@u8_data,fsr2l
  1206  001AFA  C007  FFDA         	movff	nvm_Read@u8_data+1,fsr2h
  1207  001AFE  6EDF               	movwf	indf2,c
  1208  001B00  0012               	return		;funcret
  1209  001B02                     __end_of_nvm_Read:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _EEPROM_Read *****************
  1213 ;; Defined at:
  1214 ;;		line 102 in file "i2c_EEPROM.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  add             2    2[COMRAM] unsigned int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  Data            1    4[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      unsigned char 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1
  1228 ;;      Params:         2       0       0
  1229 ;;      Locals:         1       0       0
  1230 ;;      Temps:          0       0       0
  1231 ;;      Totals:         3       0       0
  1232 ;;Total ram usage:        3 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    2
  1235 ;; This function calls:
  1236 ;;		_I2C_Master_RepeatedStart
  1237 ;;		_I2C_Master_Start
  1238 ;;		_I2C_Master_Stop
  1239 ;;		_I2C_Master_Write
  1240 ;;		_I2C_NACK
  1241 ;;		_I2C_Read_Byte
  1242 ;; This function is called by:
  1243 ;;		_nvm_Read
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text7
  1248  001B92                     __ptext7:
  1249                           	callstack 0
  1250  001B92                     _EEPROM_Read:
  1251                           	callstack 27
  1252  001B92                     
  1253                           ;i2c_EEPROM.c: 102: unsigned char EEPROM_Read(unsigned int add);i2c_EEPROM.c: 103: {;i2c
      +                          _EEPROM.c: 104:   unsigned char Data;;i2c_EEPROM.c: 105:   I2C_Master_Start();
  1254  001B92  EC5E  F00D         	call	_I2C_Master_Start	;wreg free
  1255                           
  1256                           ;i2c_EEPROM.c: 108:     I2C_Master_RepeatedStart();
  1257  001B96  EC5A  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
  1258                           
  1259                           ;i2c_EEPROM.c: 109:   I2C_Master_Write(add>>8);
  1260  001B9A  5004               	movf	(EEPROM_Read@add+1)^0,w,c
  1261  001B9C  EC90  F00D         	call	_I2C_Master_Write
  1262                           
  1263                           ;i2c_EEPROM.c: 110:   I2C_Master_Write((unsigned char)add);
  1264  001BA0  5003               	movf	EEPROM_Read@add^0,w,c
  1265  001BA2  EC90  F00D         	call	_I2C_Master_Write
  1266                           
  1267                           ;i2c_EEPROM.c: 111:   I2C_Master_RepeatedStart();
  1268  001BA6  EC5A  F00D         	call	_I2C_Master_RepeatedStart	;wreg free
  1269                           
  1270                           ;i2c_EEPROM.c: 112:   I2C_Master_Write(0xA1);
  1271  001BAA  0EA1               	movlw	161
  1272  001BAC  EC90  F00D         	call	_I2C_Master_Write
  1273                           
  1274                           ;i2c_EEPROM.c: 113:   Data = I2C_Read_Byte();
  1275  001BB0  EC81  F00D         	call	_I2C_Read_Byte	;wreg free
  1276  001BB4  6E05               	movwf	EEPROM_Read@Data^0,c
  1277                           
  1278                           ;i2c_EEPROM.c: 114:   I2C_NACK();
  1279  001BB6  EC66  F00D         	call	_I2C_NACK	;wreg free
  1280                           
  1281                           ;i2c_EEPROM.c: 115:   I2C_Master_Stop();
  1282  001BBA  EC62  F00D         	call	_I2C_Master_Stop	;wreg free
  1283  001BBE                     
  1284                           ;i2c_EEPROM.c: 116:   return Data;
  1285  001BBE  5005               	movf	EEPROM_Read@Data^0,w,c
  1286  001BC0  0012               	return		;funcret
  1287  001BC2                     __end_of_EEPROM_Read:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _I2C_Read_Byte *****************
  1291 ;; Defined at:
  1292 ;;		line 47 in file "i2c_EEPROM.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      unsigned char 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1
  1306 ;;      Params:         0       0       0
  1307 ;;      Locals:         0       0       0
  1308 ;;      Temps:          0       0       0
  1309 ;;      Totals:         0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    1
  1313 ;; This function calls:
  1314 ;;		_I2C_Master_Wait
  1315 ;; This function is called by:
  1316 ;;		_EEPROM_Read
  1317 ;;		_EEPROM_Read_Page
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text8
  1322  001B02                     __ptext8:
  1323                           	callstack 0
  1324  001B02                     _I2C_Read_Byte:
  1325                           	callstack 27
  1326  001B02                     
  1327                           ;i2c_EEPROM.c: 50:   I2C_Master_Wait();
  1328  001B02  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1329  001B06                     
  1330                           ;i2c_EEPROM.c: 51:   RCEN1=1;
  1331  001B06  86C5               	bsf	4037,3,c	;volatile
  1332  001B08                     l47:
  1333  001B08  A69E               	btfss	3998,3,c	;volatile
  1334  001B0A  EF89  F00D         	goto	u71
  1335  001B0E  EF8B  F00D         	goto	u70
  1336  001B12                     u71:
  1337  001B12  EF84  F00D         	goto	l47
  1338  001B16                     u70:
  1339  001B16                     
  1340                           ;i2c_EEPROM.c: 53:   SSPIF=0 ;
  1341  001B16  969E               	bcf	3998,3,c	;volatile
  1342  001B18                     
  1343                           ;i2c_EEPROM.c: 54:   I2C_Master_Wait();
  1344  001B18  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1345  001B1C                     
  1346                           ;i2c_EEPROM.c: 55:   return SSPBUF;
  1347  001B1C  50C9               	movf	201,w,c	;volatile
  1348  001B1E  0012               	return		;funcret
  1349  001B20                     __end_of_I2C_Read_Byte:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _I2C_NACK *****************
  1353 ;; Defined at:
  1354 ;;		line 63 in file "i2c_EEPROM.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1
  1368 ;;      Params:         0       0       0
  1369 ;;      Locals:         0       0       0
  1370 ;;      Temps:          0       0       0
  1371 ;;      Totals:         0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    1
  1375 ;; This function calls:
  1376 ;;		_I2C_Master_Wait
  1377 ;; This function is called by:
  1378 ;;		_EEPROM_Read
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text9
  1383  001ACC                     __ptext9:
  1384                           	callstack 0
  1385  001ACC                     _I2C_NACK:
  1386                           	callstack 27
  1387  001ACC                     
  1388                           ;i2c_EEPROM.c: 65:   (SSP1CON2 |=(1<<0x5)) ;
  1389  001ACC  8AC5               	bsf	197,5,c	;volatile
  1390  001ACE                     
  1391                           ;i2c_EEPROM.c: 66:   I2C_Master_Wait();
  1392  001ACE  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1393  001AD2                     
  1394                           ;i2c_EEPROM.c: 67:   (SSP1CON2 |=(1<<0x4)) ;
  1395  001AD2  88C5               	bsf	197,4,c	;volatile
  1396  001AD4  0012               	return		;funcret
  1397  001AD6                     __end_of_I2C_NACK:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _I2C_Master_Write *****************
  1401 ;; Defined at:
  1402 ;;		line 39 in file "i2c_EEPROM.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  data            1    wreg     unsigned char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  data            1    1[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1
  1416 ;;      Params:         0       0       0
  1417 ;;      Locals:         1       0       0
  1418 ;;      Temps:          0       0       0
  1419 ;;      Totals:         1       0       0
  1420 ;;Total ram usage:        1 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		_I2C_Master_Wait
  1425 ;; This function is called by:
  1426 ;;		_EEPROM_Write
  1427 ;;		_EEPROM_Read
  1428 ;;		_EEPROM_Write_Page
  1429 ;;		_EEPROM_Read_Page
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text10
  1434  001B20                     __ptext10:
  1435                           	callstack 0
  1436  001B20                     _I2C_Master_Write:
  1437                           	callstack 27
  1438                           
  1439                           ;incstack = 0
  1440                           ;I2C_Master_Write@data stored from wreg
  1441  001B20  6E02               	movwf	I2C_Master_Write@data^0,c
  1442  001B22                     
  1443                           ;i2c_EEPROM.c: 39: unsigned char I2C_Master_Write(unsigned char data);i2c_EEPROM.c: 40: 
      +                          {;i2c_EEPROM.c: 41:   I2C_Master_Wait();
  1444  001B22  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1445  001B26                     
  1446                           ;i2c_EEPROM.c: 42:   SSP1BUF = data;
  1447  001B26  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  1448  001B2A                     l41:
  1449  001B2A  A69E               	btfss	3998,3,c	;volatile
  1450  001B2C  EF9A  F00D         	goto	u61
  1451  001B30  EF9C  F00D         	goto	u60
  1452  001B34                     u61:
  1453  001B34  EF95  F00D         	goto	l41
  1454  001B38                     u60:
  1455  001B38                     
  1456                           ;i2c_EEPROM.c: 44:   SSPIF=1;
  1457  001B38  869E               	bsf	3998,3,c	;volatile
  1458  001B3A                     
  1459                           ;i2c_EEPROM.c: 45:   return ( (SSP1CON2 >> 6) & 1 );
  1460  001B3A  44C5               	rlncf	197,w,c	;volatile
  1461  001B3C  46E8               	rlncf	wreg,f,c
  1462  001B3E  0B03               	andlw	3
  1463  001B40  0B01               	andlw	1
  1464  001B42  0012               	return		;funcret
  1465  001B44                     __end_of_I2C_Master_Write:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _I2C_Master_Stop *****************
  1469 ;; Defined at:
  1470 ;;		line 33 in file "i2c_EEPROM.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1
  1484 ;;      Params:         0       0       0
  1485 ;;      Locals:         0       0       0
  1486 ;;      Temps:          0       0       0
  1487 ;;      Totals:         0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		_I2C_Master_Wait
  1493 ;; This function is called by:
  1494 ;;		_EEPROM_Write
  1495 ;;		_EEPROM_Read
  1496 ;;		_EEPROM_Write_Page
  1497 ;;		_EEPROM_Read_Page
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text11
  1502  001AC4                     __ptext11:
  1503                           	callstack 0
  1504  001AC4                     _I2C_Master_Stop:
  1505                           	callstack 27
  1506  001AC4                     
  1507                           ;i2c_EEPROM.c: 35:   I2C_Master_Wait();
  1508  001AC4  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1509  001AC8                     
  1510                           ;i2c_EEPROM.c: 36:   SSP1CON2|=0x4 ;
  1511  001AC8  84C5               	bsf	197,2,c	;volatile
  1512  001ACA  0012               	return		;funcret
  1513  001ACC                     __end_of_I2C_Master_Stop:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _I2C_Master_Start *****************
  1517 ;; Defined at:
  1518 ;;		line 23 in file "i2c_EEPROM.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1
  1532 ;;      Params:         0       0       0
  1533 ;;      Locals:         0       0       0
  1534 ;;      Temps:          0       0       0
  1535 ;;      Totals:         0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		_I2C_Master_Wait
  1541 ;; This function is called by:
  1542 ;;		_EEPROM_Write
  1543 ;;		_EEPROM_Read
  1544 ;;		_EEPROM_Write_Page
  1545 ;;		_EEPROM_Read_Page
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text12
  1550  001ABC                     __ptext12:
  1551                           	callstack 0
  1552  001ABC                     _I2C_Master_Start:
  1553                           	callstack 27
  1554  001ABC                     
  1555                           ;i2c_EEPROM.c: 25:   I2C_Master_Wait();
  1556  001ABC  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1557  001AC0                     
  1558                           ;i2c_EEPROM.c: 26:   SSP1CON2|=0x1 ;
  1559  001AC0  80C5               	bsf	197,0,c	;volatile
  1560  001AC2  0012               	return		;funcret
  1561  001AC4                     __end_of_I2C_Master_Start:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _I2C_Master_RepeatedStart *****************
  1565 ;; Defined at:
  1566 ;;		line 28 in file "i2c_EEPROM.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1
  1580 ;;      Params:         0       0       0
  1581 ;;      Locals:         0       0       0
  1582 ;;      Temps:          0       0       0
  1583 ;;      Totals:         0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    1
  1587 ;; This function calls:
  1588 ;;		_I2C_Master_Wait
  1589 ;; This function is called by:
  1590 ;;		_EEPROM_Write
  1591 ;;		_EEPROM_Read
  1592 ;;		_EEPROM_Write_Page
  1593 ;;		_EEPROM_Read_Page
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text13
  1598  001AB4                     __ptext13:
  1599                           	callstack 0
  1600  001AB4                     _I2C_Master_RepeatedStart:
  1601                           	callstack 27
  1602  001AB4                     
  1603                           ;i2c_EEPROM.c: 30:   I2C_Master_Wait();
  1604  001AB4  ECA2  F00D         	call	_I2C_Master_Wait	;wreg free
  1605  001AB8                     
  1606                           ;i2c_EEPROM.c: 31:   SSP1CON2 |=0x2 ;
  1607  001AB8  82C5               	bsf	197,1,c	;volatile
  1608  001ABA  0012               	return		;funcret
  1609  001ABC                     __end_of_I2C_Master_RepeatedStart:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _I2C_Master_Wait *****************
  1613 ;; Defined at:
  1614 ;;		line 19 in file "i2c_EEPROM.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1
  1628 ;;      Params:         0       0       0
  1629 ;;      Locals:         0       0       0
  1630 ;;      Temps:          1       0       0
  1631 ;;      Totals:         1       0       0
  1632 ;;Total ram usage:        1 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_I2C_Master_Start
  1638 ;;		_I2C_Master_RepeatedStart
  1639 ;;		_I2C_Master_Stop
  1640 ;;		_I2C_Master_Write
  1641 ;;		_I2C_Read_Byte
  1642 ;;		_I2C_NACK
  1643 ;;		_I2C_ACK
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text14
  1648  001B44                     __ptext14:
  1649                           	callstack 0
  1650  001B44                     _I2C_Master_Wait:
  1651                           	callstack 27
  1652  001B44                     l26:
  1653  001B44  B4C7               	btfsc	199,2,c	;volatile
  1654  001B46  EFA7  F00D         	goto	u11
  1655  001B4A  EFA9  F00D         	goto	u10
  1656  001B4E                     u11:
  1657  001B4E  EFA2  F00D         	goto	l26
  1658  001B52                     u10:
  1659  001B52  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1660  001B56  0E1F               	movlw	31
  1661  001B58  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1662  001B5A  A4D8               	btfss	status,2,c
  1663  001B5C  EFB2  F00D         	goto	u21
  1664  001B60  EFB4  F00D         	goto	u20
  1665  001B64                     u21:
  1666  001B64  EFA2  F00D         	goto	l26
  1667  001B68                     u20:
  1668  001B68  0012               	return		;funcret
  1669  001B6A                     __end_of_I2C_Master_Wait:
  1670                           	callstack 0
  1671  0000                     
  1672                           	psect	rparam
  1673  0000                     
  1674                           	psect	idloc
  1675                           
  1676                           ;Config register IDLOC0 @ 0x200000
  1677                           ;	unspecified, using default values
  1678  200000                     	org	2097152
  1679  200000  FF                 	db	255
  1680                           
  1681                           ;Config register IDLOC1 @ 0x200001
  1682                           ;	unspecified, using default values
  1683  200001                     	org	2097153
  1684  200001  FF                 	db	255
  1685                           
  1686                           ;Config register IDLOC2 @ 0x200002
  1687                           ;	unspecified, using default values
  1688  200002                     	org	2097154
  1689  200002  FF                 	db	255
  1690                           
  1691                           ;Config register IDLOC3 @ 0x200003
  1692                           ;	unspecified, using default values
  1693  200003                     	org	2097155
  1694  200003  FF                 	db	255
  1695                           
  1696                           ;Config register IDLOC4 @ 0x200004
  1697                           ;	unspecified, using default values
  1698  200004                     	org	2097156
  1699  200004  FF                 	db	255
  1700                           
  1701                           ;Config register IDLOC5 @ 0x200005
  1702                           ;	unspecified, using default values
  1703  200005                     	org	2097157
  1704  200005  FF                 	db	255
  1705                           
  1706                           ;Config register IDLOC6 @ 0x200006
  1707                           ;	unspecified, using default values
  1708  200006                     	org	2097158
  1709  200006  FF                 	db	255
  1710                           
  1711                           ;Config register IDLOC7 @ 0x200007
  1712                           ;	unspecified, using default values
  1713  200007                     	org	2097159
  1714  200007  FF                 	db	255
  1715                           
  1716                           	psect	config
  1717                           
  1718                           ; Padding undefined space
  1719  300000                     	org	3145728
  1720  300000  FF                 	db	255
  1721                           
  1722                           ;Config register CONFIG1H @ 0x300001
  1723                           ;	unspecified, using default values
  1724                           ;	Oscillator Selection bits
  1725                           ;	FOSC = 0x5, unprogrammed default
  1726                           ;	4X PLL Enable
  1727                           ;	PLLCFG = 0x0, unprogrammed default
  1728                           ;	Primary clock enable bit
  1729                           ;	PRICLKEN = 0x1, unprogrammed default
  1730                           ;	Fail-Safe Clock Monitor Enable bit
  1731                           ;	FCMEN = 0x0, unprogrammed default
  1732                           ;	Internal/External Oscillator Switchover bit
  1733                           ;	IESO = 0x0, unprogrammed default
  1734  300001                     	org	3145729
  1735  300001  25                 	db	37
  1736                           
  1737                           ;Config register CONFIG2L @ 0x300002
  1738                           ;	unspecified, using default values
  1739                           ;	Power-up Timer Enable bit
  1740                           ;	PWRTEN = 0x1, unprogrammed default
  1741                           ;	Brown-out Reset Enable bits
  1742                           ;	BOREN = 0x3, unprogrammed default
  1743                           ;	Brown Out Reset Voltage bits
  1744                           ;	BORV = 0x3, unprogrammed default
  1745  300002                     	org	3145730
  1746  300002  1F                 	db	31
  1747                           
  1748                           ;Config register CONFIG2H @ 0x300003
  1749                           ;	unspecified, using default values
  1750                           ;	Watchdog Timer Enable bits
  1751                           ;	WDTEN = 0x3, unprogrammed default
  1752                           ;	Watchdog Timer Postscale Select bits
  1753                           ;	WDTPS = 0xF, unprogrammed default
  1754  300003                     	org	3145731
  1755  300003  3F                 	db	63
  1756                           
  1757                           ; Padding undefined space
  1758  300004                     	org	3145732
  1759  300004  FF                 	db	255
  1760                           
  1761                           ;Config register CONFIG3H @ 0x300005
  1762                           ;	unspecified, using default values
  1763                           ;	CCP2 MUX bit
  1764                           ;	CCP2MX = 0x1, unprogrammed default
  1765                           ;	PORTB A/D Enable bit
  1766                           ;	PBADEN = 0x1, unprogrammed default
  1767                           ;	P3A/CCP3 Mux bit
  1768                           ;	CCP3MX = 0x1, unprogrammed default
  1769                           ;	HFINTOSC Fast Start-up
  1770                           ;	HFOFST = 0x1, unprogrammed default
  1771                           ;	Timer3 Clock input mux bit
  1772                           ;	T3CMX = 0x1, unprogrammed default
  1773                           ;	ECCP2 B output mux bit
  1774                           ;	P2BMX = 0x1, unprogrammed default
  1775                           ;	MCLR Pin Enable bit
  1776                           ;	MCLRE = 0x1, unprogrammed default
  1777  300005                     	org	3145733
  1778  300005  BF                 	db	191
  1779                           
  1780                           ;Config register CONFIG4L @ 0x300006
  1781                           ;	unspecified, using default values
  1782                           ;	Stack Full/Underflow Reset Enable bit
  1783                           ;	STVREN = 0x1, unprogrammed default
  1784                           ;	Single-Supply ICSP Enable bit
  1785                           ;	LVP = 0x1, unprogrammed default
  1786                           ;	Extended Instruction Set Enable bit
  1787                           ;	XINST = 0x0, unprogrammed default
  1788                           ;	Background Debug
  1789                           ;	DEBUG = 0x1, unprogrammed default
  1790  300006                     	org	3145734
  1791  300006  85                 	db	133
  1792                           
  1793                           ; Padding undefined space
  1794  300007                     	org	3145735
  1795  300007  FF                 	db	255
  1796                           
  1797                           ;Config register CONFIG5L @ 0x300008
  1798                           ;	unspecified, using default values
  1799                           ;	Code Protection Block 0
  1800                           ;	CP0 = 0x1, unprogrammed default
  1801                           ;	Code Protection Block 1
  1802                           ;	CP1 = 0x1, unprogrammed default
  1803  300008                     	org	3145736
  1804  300008  03                 	db	3
  1805                           
  1806                           ;Config register CONFIG5H @ 0x300009
  1807                           ;	unspecified, using default values
  1808                           ;	Boot Block Code Protection bit
  1809                           ;	CPB = 0x1, unprogrammed default
  1810                           ;	Data EEPROM Code Protection bit
  1811                           ;	CPD = 0x1, unprogrammed default
  1812  300009                     	org	3145737
  1813  300009  C0                 	db	192
  1814                           
  1815                           ;Config register CONFIG6L @ 0x30000A
  1816                           ;	unspecified, using default values
  1817                           ;	Write Protection Block 0
  1818                           ;	WRT0 = 0x1, unprogrammed default
  1819                           ;	Write Protection Block 1
  1820                           ;	WRT1 = 0x1, unprogramm  1821  30000A                     	org	3145738
  1822  30000A  03                 	db	3
  1823                           
  1824                           ;Config register CONFIG6H @ 0x30000B
  1825                           ;	unspecified, using default values
  1826                           ;	Configuration Register Write Protection bit
  1827                           ;	WRTC = 0x1, unprogrammed default
  1828                           ;	Boot Block Write Protection bit
  1829                           ;	WRTB = 0x1, unprogrammed default
  1830                           ;	Data EEPROM Write Protection bit
  1831                           ;	WRTD = 0x1, unprogrammed default
  1832  30000B                     	org	3145739
  1833  30000B  E0                 	db	224
  1834                           
  1835                           ;Config register CONFIG7L @ 0x30000C
  1836                           ;	unspecified, using default values
  1837                           ;	Table Read Protection Block 0
  1838                           ;	EBTR0 = 0x1, unprogrammed default
  1839                           ;	Table Read Protection Block 1
  1840                           ;	EBTR1 = 0x1, unprogrammed default
  1841  30000C                     	org	3145740
  1842  30000C  03                 	db	3
  1843                           
  1844                           ;Config register CONFIG7H @ 0x30000D
  1845                           ;	unspecified, using default values
  1846                           ;	Boot Block Table Read Protection bit
  1847                           ;	EBTRB = 0x1, unprogrammed default
  1848  30000D                     	org	3145741
  1849  30000D  40                 	db	64
  1850                           tosu	equ	0xFFF
  1851                           tosh	equ	0xFFE
  1852                           tosl	equ	0xFFD
  1853                           stkptr	equ	0xFFC
  1854                           pclatu	equ	0xFFB
  1855                           pclath	equ	0xFFA
  1856                           pcl	equ	0xFF9
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           indf0	equ	0xFEF
  1864                           postinc0	equ	0xFEE
  1865                           postdec0	equ	0xFED
  1866                           preinc0	equ	0xFEC
  1867                           plusw0	equ	0xFEB
  1868                           fsr0h	equ	0xFEA
  1869                           fsr0l	equ	0xFE9
  1870                           wreg	equ	0xFE8
  1871                           indf1	equ	0xFE7
  1872                           postinc1	equ	0xFE6
  1873                           postdec1	equ	0xFE5
  1874                           preinc1	equ	0xFE4
  1875                           plusw1	equ	0xFE3
  1876                           fsr1h	equ	0xFE2
  1877                           fsr1l	equ	0xFE1
  1878                           bsr	equ	0xFE0
  1879                           indf2	equ	0xFDF
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           preinc2	equ	0xFDC
  1883                           plusw2	equ	0xFDB
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      53
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    DIO_init@DIO_info	PTR struct DIO_Cfg_s size(2) Largest target is 4
		 -> Dio_configutation_C(COMRAM[4]), 

    nvm_Read@u8_data	PTR unsigned char  size(2) Largest target is 511
		 -> RAM(DATA[511]), 


Critical Paths under _main in COMRAM

    _main->_nvm_Write
    _nvm_Write->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _EEPROM_Write->_I2C_Master_Write
    _nvm_Read->_EEPROM_Read
    _EEPROM_Read->_I2C_Master_Write
    _I2C_Read_Byte->_I2C_Master_Wait
    _I2C_NACK->_I2C_Master_Wait
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1715
                                             25 COMRAM     1     1      0
                           _nvm_Read
                          _nvm_Write
 ---------------------------------------------------------------------------------
 (1) _nvm_Write                                            4     2      2    1309
                                             21 COMRAM     4     2      2
                       _EEPROM_Write
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     873
                                             13 COMRAM     8     4      4
                           _DIO_init
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _DIO_init                                             5     3      2     461
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         3     0      3     233
                                              2 COMRAM     3     0      3
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _nvm_Read                                             5     1      4     361
                                              5 COMRAM     5     1      4
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          3     1      2     158
                                              2 COMRAM     3     1      2
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      15
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nvm_Read
     _EEPROM_Read
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _I2C_NACK
         _I2C_Master_Wait
       _I2C_Read_Byte
         _I2C_Master_Wait
   _nvm_Write
     _EEPROM_Write
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _I2C_Master_Init
       _DIO_init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      35       1       55.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35       6        0.0%
DATA                 0      0      35       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 24 22:25:13 2021

                               l23 1CC8                                 l32 1AC2  
                               l41 1B2A                                 l26 1B44  
                               l50 1B1E                                 l35 1ABA  
                               l43 1B38                                 l44 1B42  
                               l60 1BF6                                 l29 1B68  
                               l38 1ACA                                 l47 1B08  
                               l56 1AD4                                 l72 1BC0  
                               l49 1B16                                 l90 1B90  
                               l59 1BE0                                 l93 1B00  
                               u10 1B52                                 u11 1B4E  
                               u20 1B68                                 u21 1B64  
                               u60 1B38                                 u61 1B34  
                               u70 1B16                                 u71 1B12  
                              l215 1C5E                                l216 1C5E  
                              l138 1FFE                                l255 1D6C  
                              l248 1D5C                                l894 1B44  
                              l990 1AB8                                l896 1B52  
                              l984 1ABC                                l992 1AC4  
                              l986 1AC0                                l994 1AC8  
                              l988 1AB4                                l996 1B22  
                              l998 1B26                                u200 1E3E  
                              u201 1E3A                                u210 1CF0  
                              u211 1CEC                                u220 1D12  
                              u221 1D0E                                u230 1D3A  
                              u231 1D36                                u250 1BDC  
                              u251 1BD8                                u180 1D86  
                              u181 1D82                                u245 1C90  
                              u190 1E1C                                u191 1E18  
                              wreg 000FE8                               l1000 1B3A  
                             l1010 1B1C                               l1004 1B02  
                             l1014 1ACC                               l1006 1B06  
                             l1016 1ACE                               l1008 1B18  
                             l1018 1AD2                               l1330 1D9C  
                             l1322 1D6E                               l1410 1CDA  
                             l1332 1DA4                               l1340 1E02  
                             l1420 1D1C                               l1412 1CF0  
                             l1350 1E42                               l1334 1DAE  
                             l1326 1D8A                               l1342 1E04  
                             l1422 1D3A                               l1414 1CF8  
                             l1430 1C66                               l1440 1BDC  
                             l1360 1EAC                               l1352 1E56  
                             l1344 1E1C                               l1328 1D92  
                             l1424 1D4A                               l1416 1D04  
                             l1408 1CCA                               l1432 1C6E  
                             l1442 1B92                               l1370 1F2C  
                             l1354 1E6C                               l1346 1E2C  
                             l1338 1DB8                               l1426 1D4C  
                             l1418 1D12                               l1434 1CB8  
                             l1450 1B6C                               l1444 1BBE  
                             l1380 1F72                               l1372 1F42  
                             l1364 1EB4                               l1356 1E80  
                             l1428 1D56                               l1436 1CBC  
                             l1452 1B80                               l1438 1BC2  
                             l1382 1FBC                               l1374 1F5A  
                             l1366 1EFE                               l1358 1E96  
                             l1550 1DD4                               l1462 1C2E  
                             l1456 1AEA                               l1368 1F14  
                             l1552 1ED0                               l1448 1B6C  
                             l1464 1C2E                               l1458 1AEA  
                             l1554 1F8E                               l1386 1FC4  
                             l1466 1C3C                               l1556 1FE4  
                             l1388 1FFA                               l1468 1C50  
                 __end_of_I2C_NACK 1AD6   __end_of_I2C_Master_RepeatedStart 1ABC  
                             _main 1C2E                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             fsr2l 000FD9                               start 0000  
                  EEPROM_Write@add 0003                       ___param_bank 000000  
             __end_of_EEPROM_Write 1BF8                   __end_of_DIO_init 2000  
                 ?_I2C_Master_Init 000E                   ?_I2C_Master_Wait 0001  
                 ?_I2C_Master_Stop 0001                              ?_main 0001  
                  __end_of___lldiv 1D6E                              _RCEN1 007E2B  
                            _PORTA 000F80                              _TRISA 000F92  
                            _SSPIF 007CF3             __size_of_I2C_Read_Byte 001E  
                            tablat 000FF5                              status 000FD8  
                 EEPROM_Write@data 0005               __size_of_EEPROM_Read 0030  
                  __initialization 1BF8                       __end_of_main 1C66  
                           ??_main 001A                      __activetblptr 000002  
                ?_I2C_Master_Start 0001                  ?_I2C_Master_Write 0001  
               ??_I2C_Master_Start 0002                             _ADCON1 000FC1  
               ??_I2C_Master_Write 0002                             _SSPBUF 000FC9  
           DIO_Write@first_powerup 0032           _I2C_Master_RepeatedStart 1AB4  
                    _I2C_Read_Byte 1B02                          ??___lldiv 0009  
                        ?_I2C_NACK 0001                       __pdataCOMRAM 001A  
                 __end_of_nvm_Read 1B02                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                       __accesstop 0060            __end_of__initialization 1C24  
                        ?_DIO_init 0001                      ___rparam_used 000001  
            __size_of_EEPROM_Write 0036                     ?_I2C_Read_Byte 0001  
                   __pcstackCOMRAM 0001                         ??_I2C_NACK 0002  
                     _EEPROM_Write 1BC2                         ??_DIO_init 0003  
                       __pnvCOMRAM 0034                 __size_of_nvm_Write 0028  
                          _SSP1ADD 000FC8                            _SSP1BUF 000FC9  
                  ??_I2C_Read_Byte 0002         DIO_init@first_powerup_init 0033  
                          __Hparam 0000                            __Lparam 0000  
                        ?_nvm_Read 0006                            ___lldiv 1CCA  
                          __pcinit 1BF8                            __ramtop 0200  
                          __ptext0 1C2E                            __ptext1 1B6A  
                          __ptext2 1C66                            __ptext3 1CCA  
                          __ptext4 1D6E                            __ptext5 1BC2  
                          __ptext6 1AEA                            __ptext7 1B92  
                          __ptext8 1B02                            __ptext9 1ACC  
                          _is_init 0034           __size_of_I2C_Master_Init 0064  
         __size_of_I2C_Master_Wait 0026           __size_of_I2C_Master_Stop 0008  
             end_of_initialization 1C24         ??_I2C_Master_RepeatedStart 0002  
                    ??_EEPROM_Read 0005                      __Lmediumconst 0000  
                __end_of_nvm_Write 1B92          __size_of_I2C_Master_Start 0008  
        __size_of_I2C_Master_Write 0024                    ___lldiv@divisor 0005  
                  ___lldiv@counter 000D                         ??_nvm_Read 000A  
                          postdec1 000FE5                            postinc0 000FEE  
                __size_of_I2C_NACK 000A          _Dio_configutation_A_7_seg 0022  
                __size_of_DIO_init 0292                __end_of_EEPROM_Read 1BC2  
                    __pidataCOMRAM 1AD6                start_initialization 1BF8  
                ??_I2C_Master_Init 0012                  ??_I2C_Master_Wait 0001  
                ??_I2C_Master_Stop 0002                  DIO_init@ret_error 0005  
              _Dio_configutation_B 001E                _Dio_configutation_C 002A  
              _Dio_configutation_D 001A                _Dio_configutation_E 002E  
                      __pbssCOMRAM 002E                   DIO_init@DIO_info 0001  
                      _EEPROM_Read 1B92                   _I2C_Master_Start 1ABC  
                 _I2C_Master_Write 1B20                           ?___lldiv 0001  
                __size_of_nvm_Read 0018               I2C_Master_Write@data 0002  
              nvm_Read@u16_address 0008                           _I2C_NACK 1ACC  
                         _DIO_init 1D6E            _Dio_configutation_A_ADC 0026  
            __end_of_I2C_Read_Byte 1B20                          _nvm_Write 1B6A  
                         _SSP1CON1 000FC6                           _SSP1CON2 000FC5  
                         _SSP1STAT 000FC7                   nvm_Write@u8_data 0019  
              I2C_Master_Init@baud 000E                          copy_data0 1C0C  
                         __Hrparam 0000               nvm_Write@u16_address 0016  
                         __Lrparam 0000                         ?_nvm_Write 0016  
                  nvm_Read@u8_data 0006  __size_of_I2C_Master_RepeatedStart 0008  
        ?_I2C_Master_RepeatedStart 0001                   __size_of___lldiv 00A4  
                  _I2C_Master_Init 1C66                    _I2C_Master_Wait 1B44  
                  _I2C_Master_Stop 1AC4                           __ptext10 1B20  
                         __ptext11 1AC4                           __ptext12 1ABC  
                         __ptext13 1AB4                           __ptext14 1B44  
                    ?_EEPROM_Write 0003                      __size_of_main 0038  
                         _nvm_Read 1AEA           __end_of_I2C_Master_Start 1AC4  
         __end_of_I2C_Master_Write 1B44                     ??_EEPROM_Write 0006  
                     ?_EEPROM_Read 0003                   ___lldiv@dividend 0001  
                      ??_nvm_Write 0018            __end_of_I2C_Master_Init 1CCA  
          __end_of_I2C_Master_Wait 1B6A            __end_of_I2C_Master_Stop 1ACC  
                 ___lldiv@quotient 0009                    EEPROM_Read@Data 0005  
                   EEPROM_Read@add 0003  
